name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12]
        os: [ubuntu-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt', '**/dev-requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r dev-requirements.txt
        pip install -e .

    - name: Run tests with coverage
      run: |
        pytest --cov=aiagent_payments --cov-report=xml --cov-report=term-missing --cov-fail-under=50

  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r dev-requirements.txt

    - name: Check code formatting with Black
      run: |
        black --check --diff .

    - name: Check import sorting with isort
      run: |
        isort --diff .

    - name: Lint with flake8
      run: |
        flake8 aiagent_payments/ tests/

    # - name: Type check with mypy
    #   run: |
    #     mypy aiagent_payments/ --ignore-missing-imports

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r dev-requirements.txt
        pip install bandit safety

    - name: Run security scan with Bandit
      run: |
        bandit -r aiagent_payments/ -f json -o bandit-report.json || echo '{"results": []}' > bandit-report.json

    - name: Check for known security vulnerabilities
      run: |
        safety check --json --output safety-report.json || echo '{"vulnerabilities": []}' > safety-report.json

    - name: Ensure security reports exist
      run: |
        if [ ! -f bandit-report.json ]; then echo '{"results": []}' > bandit-report.json; fi
        if [ ! -f safety-report.json ]; then echo '{"vulnerabilities": []}' > safety-report.json; fi

    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json

  notify:
    name: Notify on Failure
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    if: failure()
    steps:
    - name: Notify failure
      run: |
        echo "One or more CI jobs failed. Please check the logs for details."
        # Add notification logic here (Slack, email, etc.) 