[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aiagent-payments"
version = "0.0.1-beta"
description = "A Python SDK for monetizing AI/autonomous agents with subscription and pay-per-use models"
authors = [
    { name = "Chirag Maliwal", email = "Chiragmaliwal1995@gmail.com" }
]
readme = "README.md"
license = "MIT"
requires-python = ">=3.10"
keywords = ["ai", "payments", "subscription", "monetization", "agents", "autonomous"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business :: Financial",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "cryptography>=45.0.0",
    "requests>=2.32.0",
    "stripe>=12.2.0",
    "paypalrestsdk>=1.13.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.10.0",
    "black>=25.1.0",
    "flake8>=7.0.0",
    "isort>=6.0.0",
    "mypy>=1.10.0",
    "bandit>=1.8.0",
    "safety>=3.2.0",
    "pip-audit>=2.9.0",
    "pre-commit>=4.2.0",
    "build>=1.2.0",
    "twine>=5.1.0",
]
test = [
    "pytest>=8.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.10.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
stripe = [
    "stripe>=12.2.0",
]
paypal = [
    "paypalrestsdk>=1.13.0",
]
crypto = [
    "web3>=7.0.0",
    "qrcode>=7.4.0",
    "pillow>=10.0.0",
]
database = [
    "sqlalchemy>=1.4.0",
    "alembic>=1.7.0",
]
web = [
    "flask>=2.0.0",
    "fastapi>=0.68.0",
    "uvicorn>=0.15.0",
]
examples = [
    "crewai>=0.134.0",
    "langgraph>=0.2.0",
    "langchain-core>=0.3.0",
    "langchain>=0.3.0",
]

[project.urls]
Homepage = "https://github.com/cmaliwal/aiagent-payments"
Documentation = "https://github.com/cmaliwal/aiagent-payments"
Repository = "https://github.com/cmaliwal/aiagent-payments"
"Bug Tracker" = "https://github.com/cmaliwal/aiagent-payments/issues"

[project.scripts]
aiagent-payments = "aiagent_payments.cli.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["aiagent_payments*"]

[tool.setuptools.package-data]
aiagent_payments = ["py.typed"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "functional: marks tests as functional tests",
]

[tool.coverage.run]
source = ["aiagent_payments"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 130
skip-string-normalization = false
skip-magic-trailing-comma = false
exclude = '''
/(\.|venv|envs|build|dist|__pycache__)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 130
known_first_party = ["aiagent_payments"]
known_third_party = ["pytest", "requests", "cryptography", "pydantic"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    ".eggs",
    "*.egg",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "stripe.*",
    "paypalrestsdk.*",
    "web3.*",
    "qrcode.*",
    "PIL.*",
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]

[tool.safety]
output = "json" 